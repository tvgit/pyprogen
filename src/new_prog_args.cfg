# https://docs.python.org/2/library/argparse.html
# http://pymotw.com/2/argparse/
# https://mkaz.com/2014/07/26/python-argparse-cookbook/
#
# https://pypi.python.org/pypi/ConfArgParse
#
# >ConfArgParse< ... adds a config file parsing capability to >argparse<.
# Adding arguments to >ConfArgParse< is identical to the >argparse< module.
#
# Writing a configuration file, that contains all options is done by
# calling the program with the >–export-conf-file< option:
# python prog.py -n –export-conf-file conf.ini
#
# Reading the configuration file is done by
# calling the program with the >–conf-file< option:
# python prog.py –conf-file new_prog_args.conf
#
# nb
# optional   arguments == >-c< or >--chars<  (with '-' or '--')
# positional arguments == >c<  or >chars<    (w/o  '-' or '--' => mandatory)
#
# returns a >Namespace<

# TODO Konfiguration der input und output-files hier ermöglichen;
# TODO die defaults sind IRREFÜHREND und UNSINNIG, WEIL sie nicht in den neuen directory tree eingebaut sind.
# add arguments:
#    parser.add_argument('-d', '--data_dir', default='..\data', help = 'data dir')
    parser.add_argument('-i', '--fn_data_in',  default='DataIn.dat'  , help = 'name of data input file')
    parser.add_argument('-o', '--fn_data_out', default='DataOut.dat' , help = 'name of data output file')



#234 234
    parser.add_argument('-a', '--aaaa', default='aaaa_default', help = ' help aaaa')
    parser.add_argument('-b', '--bbbb', default='bbbb_default', help = ' help bbbb')
####   parser.add_argument('-c', '--cccc', default='cccc_default', help = ' help cc') # predefined: config file -> do not use!
#    parser.add_argument('-d', '--dddd', default='dddd_default', help = ' help dd')
#    parser.add_argument('-e', '--eeee', default='eeee_default', help = ' help ee')
#    parser.add_argument('-f', '--ffff', default='ffff_default', help = ' help ff')
#    parser.add_argument('-g', '--gggg', default='gggg_default', help = ' help gg')
####   parser.add_argument('-h', '--hhhh', default='hhhh_default', help = ' help hh') # predefined: help -> do not use!
#    parser.add_argument('-i', '--iiii', default='iiii_default', help = ' help ii')
#    parser.add_argument('-j', '--jjjj', default='jjjj_default', help = ' help jj')
#    parser.add_argument('-k', '--kkkk', default='kkkk_default', help = ' help kk')
#    parser.add_argument('-l', '--llll', default='llll_default', help = ' help ll')
#    parser.add_argument('-m', '--mmmm', default='mmmm_default', help = ' help mm')
#    parser.add_argument('-n', '--nnnn', default='nnnn_default', help = ' help nn')
#    parser.add_argument('-o', '--oooo', default='oooo_default', help = ' help oo')
#    parser.add_argument('-p', '--pppp', default='pppp_default', help = ' help pp')
#    parser.add_argument('-q', '--qqqq', default='qqqq_default', help = ' help qq')
#    parser.add_argument('-r', '--rrrr', default='rrrr_default', help = ' help rr')
#    parser.add_argument('-s', '--ssss', default='ssss_default', help = ' help ss')
#    parser.add_argument('-t', '--tttt', default='tttt_default', help = ' help tt')
####   parser.add_argument('-u', '--uuuu', default='uuuu_default', help = ' help uu')
#    parser.add_argument('-v', '--vvvv', default='vvvv_default', help = ' help vv')  # predefined: verbose -> do not use!
#    parser.add_argument('-w', '--wwww', default='wwww_default', help = ' help ww')
#    parser.add_argument('-x', '--xxxx', default='xxxx_default', help = ' help xx')
#    parser.add_argument(      '--yyyy', default='yyyy_default', help = ' help yy')  
#    parser.add_argument('-z', '--zzzz', default='zzzz_default', help = ' help zz')
#    parser.add_argument('-z',           default='z_default',    help = ' help  z')
# DO NOT FORGET default!
#    parser.add_argument('--sum', dest='accumulate', action='store_const', const=sum, default=max, help='sum the integers (default: find the max)')

#234 234 
# positional arguments == mandatory arguments == obligatory arguments
#    parser.add_argument('log_file', type=file)
#    parser.add_argument('bar', type=file)
#    parser.add_argument('file_in', nargs='?' , type=argparse.FileType('r'), default=sys.stdin)
#    parser.add_argument('file_out', nargs='?', type=argparse.FileType('w'), default=sys.stdout)
	
# other examples:	
#    parser.add_argument('-a', action="store_true", default=False)
#    parser.add_argument('-b', '--bar', default='bar')
#    parser.add_argument('-f', '--foo', action='store_true')
#    parser.add_argument('-i', metavar='in-file', type=argparse.FileType('rt'))
#    parser.add_argument('-o', metavar='out-file', type=argparse.FileType('wt'))
#    parser.add_argument('-s', action='store', dest='simple_value', help='Store a simple value')
#    parser.add_argument('foo', type=int)
#    parser.add_argument('gnat', type=float)  #...
#    parser.add_argument('gnu', type=argparse.FileType('w'))
#    parser.add_argument('integers', metavar='N', type=int, nargs='+', help='an integer for the accumulator')
#    parser.add_argument('value', default='2222')


