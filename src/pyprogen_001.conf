# https://docs.python.org/2/library/argparse.html
# http://pymotw.com/2/argparse/
# https://pypi.python.org/pypi/ConfArgParse
#
# >ConfArgParse< ... adds a config file parsing capability to >argparse<.
# Adding arguments to >ConfArgParse< is identical to the >argparse< module.
#
# Writing a configuration file, that contains all options is done by
# calling the program with the >–export-conf-file< option:
# python prog.py -n –export-conf-file conf.ini
#
# Reading the configuration file is done by
# calling the program with the >–conf-file< option:
# python prog.py –conf-file conf.ini
#
# nb
# optional   arguments == >-c< or >--chars<  (with '-' or '--')
# positional arguments == >c<  or >chars<    (w/o  '-' or '--' => mandatory)
#
# returns a >Namespace<

# add arguments:
    parser.add_argument('-a', '--aaaa', default='aa', help = ' help aa')
    parser.add_argument('-b', '--bbbb', default='bb', help = ' help bb')
#   parser.add_argument('-c', '--cccc', default='cc', help = ' help cc') # predefined: cofig file
    parser.add_argument('-d', '--dddd', default='dd', help = ' help dd')
    parser.add_argument('-e', '--eeee', default='ee', help = ' help ee')
    parser.add_argument('-f', '--ffff', default='ff', help = ' help ff')
    parser.add_argument('-g', '--gggg', default='gg', help = ' help gg')
#   parser.add_argument('-h', '--hhhh', default='hh', help = ' help hh') # predefined: help
    parser.add_argument('-i', '--iiii', default='ii', help = ' help ii')
    parser.add_argument('-j', '--jjjj', default='jj', help = ' help jj')
    parser.add_argument('-k', '--kkkk', default='kk', help = ' help kk')
    parser.add_argument('-l', '--llll', default='ll', help = ' help ll')
    parser.add_argument('-m', '--mmmm', default='mm', help = ' help mm')
    parser.add_argument('-n', '--nnnn', default='nn', help = ' help nn')
    parser.add_argument('-o', '--oooo', default='oo', help = ' help oo')
    parser.add_argument('-p', '--pppp', default='pp', help = ' help pp')
    parser.add_argument('-q', '--qqqq', default='qq', help = ' help qq')
    parser.add_argument('-r', '--rrrr', default='rr', help = ' help rr')
    parser.add_argument('-s', '--ssss', default='ss', help = ' help ss')
    parser.add_argument('-t', '--tttt', default='tt', help = ' help tt')
    parser.add_argument('-u', '--uuuu', default='uu', help = ' help uu')
#   parser.add_argument('-v', '--vvvv', default='vv', help = ' help vv')  # predefined: verbose
    parser.add_argument('-w', '--wwww', default='ww', help = ' help ww')
    parser.add_argument('-x', '--xxxx', default='xx', help = ' help xx')
    parser.add_argument(      '--yyyy', default='yy', help = ' help yy')
#   parser.add_argument('-z', '--zzzz', default='zz', help = ' help zz')
    parser.add_argument('-z',           default='zz', help = ' help zz')
# DO NOT FORGET default!
    parser.add_argument('--sum', dest='accumulate', action='store_const', const=sum, default=max, help='sum the integers (default: find the max)')


#    parser.add_argument('-a', action="store_true", default=False)
#    parser.add_argument('-b', '--bar', default='bar')
#    #parser.add_argument('-c', dest="c", type=int)  # confargparse -> conf-file
#    parser.add_argument('-f', '--foo', action='store_true')

#    parser.add_argument('-i', metavar='in-file', type=argparse.FileType('rt'))
#    parser.add_argument('-o', metavar='out-file', type=argparse.FileType('wt'))
#    parser.add_argument('-s', action='store', dest='simple_value', help='Store a simple value')

    parser.add_argument('bar', type=file)
    parser.add_argument('file_in', nargs='?' , type=argparse.FileType('r'), default=sys.stdin)
    parser.add_argument('file_out', nargs='?', type=argparse.FileType('w'), default=sys.stdout)
#    parser.add_argument('foo', type=int)
#    parser.add_argument('gnat', type=float)  #...
#    parser.add_argument('gnu', type=argparse.FileType('w'))
#    parser.add_argument('integers', metavar='N', type=int, nargs='+', help='an integer for the accumulator')
#    parser.add_argument('value', default='2222')


